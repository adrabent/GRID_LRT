#Prefactor calibrator sandbox

sandbox:
    name: targ1_sandbox
    loc: "gsiftp://gridftp.grid.sara.nl:2811/pnfs/grid.sara.nl/data/lofar/user/sksp/spectroscopy-migrated/sandbox"
    loc2: None
    type: lofar_prefactor
    git_scripts: #pulls scripts to make sandbox
        prefactor:
            git_url: "https://github.com/apmechev/prefactor.git"
            commit: "c625e8f"    
    remove_when_done: False

reduction_params:
   OBSID: &OBS L000000          #MUST be set by other script or taken from Token

token:
    token_type: &toktype default_token_type     #Here lies the id linking the different pipelines
    keys:
        pipeline: pref_targ1 

tokvar: #token values -> Bash variables 
    '_id': '$TOKEN'
    OBSID : '$OBSID'
    CAL_OBSID: "$CAL_OBSID"
    start_SB: '$STARTSB'
    lofar_sw_dir : '$LOFAR_PATH'
    pipeline: '$PIPELINE'
    '_attachments':
        Pre-Facet-Target-1.parset: '$PARSET'
        srm.txt : srm.txt



executable:
    launcher:                   #This is what is submitted to the queue
        name: run_remote_sandbox.sh
        params:
            - $PICAS_DB
            - $PICAS_USR 
            - $PICAS_USR_PWD
            - *toktype 
    exe:                        #this/these is/are what is executed by pilot.py in order 
        - master.sh:            #There surely exists an input/output to script package?
            inputs: ["obsid","lofdir","pipetype"]       #type: file,att,envar,tokvar
            outputs: ["returncode","$DATA_LOC"]         #type: file,att,envar,tokvar
        
results:
    UL_loc: gsiftp://gridftp.grid.sara.nl:2811/pnfs/grid.sara.nl/data/lofar/user/sksp/spectroscopy-migrated/prefactor/cal_sols/ 
    UL_pattern:
        - *OBS 
        - "_soltions.tar"
